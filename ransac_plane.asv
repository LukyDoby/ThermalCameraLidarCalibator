%% RANSAC plane
clearvars -except brushedData; clc; close all

cloud = pcread("checkerboard_09_25/data_for_calibration/clouds/0013.pcd");
%pcshow(cloud);

numOfIter = 3;
thresh = 0.02;

[bestPlanePoints,inliers,cf] = RANSAC_plane_fnc(brushedData,numOfIter,thresh);



%% Plotting results

[x, y] = meshgrid(1:0.1:3, -1:0.1:1); 
A = cf(1); B = cf(2); C =cf(3); D = cf(4);
z = (-D -A*x -B*y)/C;

% pcshow(cloud);
% hold on;
% surf(x, y, z);

%% Extract bounadry points of checkerboard from cloud

scan_line_thresh = 0.03;
scan_line_pts = [];
left_boundaires = [];
right_boundaires = [];
for i = 1:length(inliers)-1
    
    if(abs(inliers(i,3)- inliers(i+1,3)) > scan_line_thresh)
        
        scan_line_pts(end+1,:) = inliers(i,:);
        scan_line_pts = sortrows(scan_line_pts,2);
        left_boundaires(end+1,:) = scan_line_pts(end,:);
        right_boundaires(end+1,:) = scan_line_pts(1,:);
        scan_line_pts = [];
    else
        scan_line_pts(end+1,:) = inliers(i,:);

    end
    
end

        scan_line_pts(end+1,:) = inliers(end,:);
        scan_line_pts = sortrows(scan_line_pts,2);
        left_boundaires(end+1,:) = scan_line_pts(end,:);
        right_boundaires(end+1,:) = scan_line_pts(1,:);

        % pcshow(cloud);
        % hold on;
        % plot3(left_boundaires(:,1),left_boundaires(:,2),left_boundaires(:,3), "r+")
        % hold on
        % plot3(right_boundaires(:,1),right_boundaires(:,2),right_boundaires(:,3), "b+")

%% Split boundaries into 4 lines 
angles_left = [];
angles_right = [];
for i = 2:length(right_boundaires)-1

    left_P = left_boundaires(i-1,:);
    left_Q = left_boundaires(i,:);
    left_R = left_boundaires(i+1,:);

    right_P = right_boundaires(i-1,:);
    right_Q = right_boundaires(i,:);
    right_R = right_boundaires(i+1,:);

    u_left = left_P-left_Q;
    v_left = left_R-left_Q;

    u_right = right_P-right_Q;
    v_right = right_R-right_Q;

    theta_deg_left = angleBetweenVectors(u_left,v_left);

    theta_deg_right = angleBetweenVectors(u_right,v_right);

    angles_left(end+1) = theta_deg_left;
    angles_right(end+1) = theta_deg_right;

end
idx_of_largest_change_left = find(angles_left==min(angles_left)); % largest change coresponds to a minimal angle
idx_of_largest_change_right = find(angles_right==min(angles_right));

first_line_pts = left_boundaires(1:idx_of_largest_change_left,:);
second_line_pts = left_boundaires(idx_of_largest_change_left+1:end,:);
third_line_pts = right_boundaires(1:idx_of_largest_change_right,:);
fourth_line_pts = right_boundaires(idx_of_largest_change_right+1:end,:);

pcshow(cloud);
hold on;
plot3(first_line_pts(:,1),first_line_pts(:,2),first_line_pts(:,3), "r+")
hold on
plot3(second_line_pts(:,1),second_line_pts(:,2),second_line_pts(:,3), "g+")
hold on
plot3(third_line_pts(:,1),third_line_pts(:,2),third_line_pts(:,3), "c+")
hold on
plot3(fourth_line_pts(:,1),fourth_line_pts(:,2),fourth_line_pts(:,3), "w+")


%% Find edge lines using RANSAC

